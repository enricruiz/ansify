#!/usr/bin/env ruby

require 'chunky_png'
require 'rainbow'
require 'trollop'

VERSION = "0.0.1"

options = Trollop::options do
  version "ansify v#{VERSION}"

  opt :file, "PNG file to convert", :type => String
  opt :resize, "Resize image in % [1, 99]", :type => :int
  opt :nearest, "Resize using nearest neighbor sampling instead of bilinear sampling"
end

Trollop::die :file, "must exist" unless File.exist?(options[:file]) if options[:file]
Trollop::die :resize, "> 0 and < 100" unless (1..99).include? options[:resize] if options[:resize]

image = ChunkyPNG::Image.from_file(options[:file])

if options[:resize]
  w = image.dimension.width - (image.dimension.width * options[:resize] / 100)
  h = image.dimension.height - (image.dimension.height * options[:resize] / 100)

  if options[:nearest]
    image = image.resample_nearest_neighbor(w, h)
  elsif
    image = image.resample_bilinear(w, h)
  end
end

(0..image.dimension.height - 1).each do |y|
  (0..image.dimension.width - 1).each do |x|
    pixel = image[x, y]
    r = ChunkyPNG::Color.r(pixel)
    g = ChunkyPNG::Color.g(pixel)
    b = ChunkyPNG::Color.b(pixel)
    a = ChunkyPNG::Color.a(pixel)

    print a > 128 ? "  ".background(r, g, b) : "  "
  end
  print "\n"
end

